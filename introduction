1.平衡二叉树
    一般二叉树高度最佳状态为log2n（n是指树中的节点数,后同），其各种操作的时间复杂度也为O(log2n),但并是所有的普通二叉树都有这么理想化，
尤其是在一个二叉树被不停的删除、插入操作后，二叉树在最极端情况下的结构接近链表，其时间复杂度也为O(n),
这导致二叉树的搜索能力大大下降。为了解决这个问题，我们引入了平衡二叉树的概念，它保证树的左右孩子节点的高度差
不超过1，并且左右子树也保持这种状态，这也可以保证操作它的时间复杂度都在O(log2n)附近。下面来看看常见的平衡二叉树

1.1 AVL树

1.2 红黑树

2. B树
    B树也是一种平衡树，但它不属于二叉树，即父节点不止2个孩子节点。

